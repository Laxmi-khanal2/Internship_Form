@model List<CreateInternship>

@{
    ViewData["Title"] = "Internship Cards";
    Layout = "~/Views/Shared/AdminLTEStudent/_Layout.cshtml";
}
<style>

    :-webkit-full-screen{
        background-color: white;
    }
    :-ms-fullscreen{
        background-color:white;
    }
    :fullscreen{
        background-color:white;
    }
    .card-container {
        display: flex;
        justify-content: center; /* Center horizontally */
        align-items: center; /* Center vertically */
        flex-wrap: wrap; /* Allow cards to wrap if they exceed container width */
    }
    .card {
        width: 90%;
        /* max-width: 1000px;*/
        height: 250px;
        position: relative;
       overflow:hidden;  /* Make the card scrollable */
        margin-right: 20px;
        margin-bottom: 20px;
        border-radius: 15px;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
    }

        .card:hover {
            transform: scale(1.02);
            transition: transform 0.3s ease;
        }

        .card::before {
            content: "";
            display: block;
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: linear-gradient(to bottom right, white, white);
            opacity: 0.5;
            z-index: 1;
        }

    .card-body {
        position: relative;
        z-index: 2;
        padding: 20px;
    }

    .card-title {
        font-size: 24px;
        margin-bottom: 10px;
        color: red;
    }

    .label {
        font-weight: bold;
        color: #000000;
    }

    .card-text {
        margin-bottom: 10px;
        font-weight: normal;
        color: #343a40;
    }

    .apply-button {
        position: absolute;
        top: 10px;
        right: 10px;
        background-color: red;
        border-color: #dc3545;
        z-index: 2;
    }

    .btnn {
        position: absolute;
        top: 10px;
        background-color: #dc3545;
        border-color: #dc3545;
        z-index: 2;
    }

    .btn:hover {
        background-color: #c82333;
    }
</style>
@if (TempData["Message"] != null)
{
    <div id="alertMessage" class="alert alert-info">@TempData["Message"]</div>
}

<div class="input-group mb-3 mt-2">
  <h6><span class=" label">Search Internship by Name :</span></h6>
    <input type="text" class="form-control" placeholder="search by name" id="searchInput">
</div>

<div class="card-container">
    @foreach (var Internship in Model)
    {
        <div class="card" onclick="openFullScreen(this)">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12">
                            
                        <h5 class="card-title">@Internship.TitleOfInternship</h5>
                    </div>
                    @if (ViewBag.AppliedInternshipIds != null && ViewBag.AppliedInternshipIds.Contains(Internship.Id))
                    {
                        <div class="alert alert-info">You have already applied for this internship.</div>
                    }
                 
                   else
                    {
                        <form asp-controller="Student" asp-action="Apply" method="post">
                            <input type="hidden" name="internshipId" value="@Internship.Id" />
                            <button type="submit" class="btn btn-primary apply-button">Apply</button>
                        </form>
                    } 
           @*          <a asp-controller="Student" asp-action="Create" class="btn btn-primary apply-button">Apply</a> *@
                    <div class="col-md-6">
                        <span class="label">Company Name:</span>
                        <p class="card-text">@Internship.NameOfCompany</p>
                    </div>
                    <div class="col-md-6">
                        <span class="label">Address:</span>
                        <p class="card-text">@Internship.Address</p>
                    </div>
                    <div class="col-md-6">
                        <span class="label">Offered-Salary:</span>
                        <p class="card-text">@Internship.OfferedSalary</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <span class="label">Type:</span>
                        <p class="card-text">@EnumHelper.GetDisplayName((TypeOfInternship)Internship.SelectedType)</p>
                    </div>
                    <div class="col-md-6">
                        <span class="label">Location:</span>
                        @{
                            LocationType location;
                            Enum.TryParse(Internship.Location, out location);
                        }
                        <p class="card-text">@EnumHelper.GetDisplayName(location)</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <span class="label">Duration:</span>
                        <p class="card-text">@Internship.Duration</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <span class="label">Job Description:</span>
                        <p class="card-text">@Html.Raw(Internship.JobDescription)</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <span class="label">Responsibility:</span>
                        <p class="card-text">@Html.Raw(Internship.Responsiblity)</p>
                    </div>
                </div>
           
               
            </div>
        </div>
    }
    <input type="hidden" id="createInternshipId" name="createInternshipId" value=""/>
</div>

<script>


    function openFullScreen(cardBody) {
        const card = cardBody.closest('.card'); // Find the parent card element
        if (card) {
            if (card.requestFullscreen) {
                card.requestFullscreen();
            } else if (card.webkitRequestFullscreen) {
                card.webkitRequestFullscreen();
            } else if (card.msRequestFullscreen) {
                card.msRequestFullscreen();
            } else {
                console.error(" This Card doesnot support Fullscreen");
            }
        } else {
            console.error("Parent card element not found");
        }
    }
    document.addEventListener("fullscreenchange", function () {
        const fullscreenElement = document.fullscreenElement || document.webkitExitFullscreen || document.msFullscreenElement;
        if (!fullscreenElement) {
            closeFullscreen();
        }
    });

    function closeFullscreen(card) {
        if (card.exitFullscreen) {
            card.exitFullscreen();

        }
        else if (card.webkitExitFullscreen) {
            card.webkitExitFullscreen();
        }
        else if (card.msExitFullscreen) {
            card.msExitFullscreen();
        }
    }

    document.addEventListener("DOMContentLoaded", function () {
        const searchInput = document.getElementById("searchInput");
        searchInput.addEventListener("input", function () {
            const searchTerm = searchInput.value.trim().toLowerCase();
            const cards = document.querySelectorAll(".card");
            cards.forEach(card => {
                const cardTitle = card.querySelector(".card-title").textContent.toLowerCase();
                if (cardTitle.includes(searchTerm)) {
                    card.style.display = "block";
                } else {
                    card.style.display = "none";
                }
            });
        });
    });
    setTimeout(function () {
        document.getElementById("alertMessage").style.display = "none";
    }, 3000);

   
</script>

